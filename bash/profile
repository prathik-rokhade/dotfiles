#!/usr/bin/env bash

# -- docs -------------------------------------------------------
# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.

if [ -f ~/.bashrc ]; then
    source ~/.bashrc
fi

# -- path, command prompt ---------------------------------------
export PATH='/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/X11/bin:~/bin'

# -- helpful functions ------------------------------------------
source_if_exists() {
    [[ -f $1 ]] && source $1
}

# -- environment vars & dotfiles --------------------------------
export EDITOR=vim
export LESS='-i-P%f (%i/%m) Line %lt/%L'
source_if_exists "$HOME/.aliases"       # Aliases

# -- Bash bindings / settings ----------------------------------
bind 'set show-all-if-ambiguous on'
bind 'TAB:menu-complete'
bind 'set completion-ignore-case on'
bind 'set visible-stats on'
bind 'set page-completions off'

# -- OS  settings -----------------------------------------------
osx() {
  if [ "$(uname)" == "Darwin" ]; then
    export EVENT_NOKQUEUE=1 # tmux kqueue error
    export WORKON_HOME=$HOME/.virtualenvs
    export PROJECT_HOME=$HOME/Devel
    source_if_exists /usr/local/bin/virtualenvwrapper.sh

    # -- use ctrl + <Left> / <Right> ----------------------------
    bind '"\e[5C": forward-word'
    bind '"\e[5D": backward-word'
    bind '"\e[1;5C": forward-word'
    bind '"\e[1;5D": backward-word'

    if [ -f $(brew --prefix)/etc/bash_completion ]; then
        source $(brew --prefix)/etc/bash_completion   # bash-completion
    fi

  fi
}

linux() {
  if [ "$(uname)" == "Linux" ]; then
    #echo -en '\E[0;37;40m\E[8]'
    #echo "\033[37;44m\033[8]"
    #echo -en "\e]PFdedede" #white
    ## Xsel and Xclip don't work in virtual terminal
    #alias pbcopy='xsel --clipboard --input'
    #alias pbpaste='xsel --clipboard --output'
    alias ls='ls --color=auto'
  fi
  #if [ "$TERM" = "linux" ]; then
    #echo -en "\e]P0222222" #black
    #echo -en "\e]P8222222" #darkgrey
    #echo -en "\e]P1803232" #darkred
    #echo -en "\e]P9982b2b" #red
    #echo -en "\e]P25b762f" #darkgreen
    #echo -en "\e]PA89b83f" #green
    #echo -en "\e]P3aa9943" #brown
    #echo -en "\e]PBefef60" #yellow
    #echo -en "\e]P4324c80" #darkblue
    #echo -en "\e]PC2b4f98" #blue
    #echo -en "\e]P5706c9a" #darkmagenta
    #echo -en "\e]PD826ab1" #magenta
    #echo -en "\e]P692b19e" #darkcyan
    #echo -en "\e]PEa1cdcd" #cyan
    #echo -en "\e]P7ffffff" #lightgrey
    #echo -en "\e]PFdedede" #white
    #clear #for background artifacting
  #fi
}

os_specific() {
  case $(uname) in
    ('Darwin') osx;;
    ('Linux') linux;;
  esac
}

os_specific

# -- computer-specific stuffs -----------------------------------
work() {
  start_docker
  #export PATH=$PATH:~/Code/Other/kafka/bin
  source_if_exists "$HOME/.aws"           # AWS config
  source_if_exists "$HOME/.profilelocal"  # env variables
  source_if_exists "$HOME/.aliases-work"  # Aliases

  #Uncomment for the below to add personal pem key everytime a shell launches
  #ssh-add ~/.ssh/id_rsa
}

start_docker() {
  if [[ $(docker-machine ls | grep "default" | grep -c "Running") -eq 1 ]]; then
    eval "$(docker-machine env default)"
  else
    docker-machine start
    eval "$(docker-machine env default)"
  fi
}

skilbjo() {
  export GPG_TTY=$(tty)
}

computer_specific() {
  case $(whoami) in
    ('john.skilbeck') work;;
    (skilbjo) skilbjo;;
  esac
}

computer_specific
